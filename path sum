#	Definition	for	a	binary	tree	node.
 #	class	TreeNode(object):
 #					
def	__init__(self,	x):
 #									
self.val	=	x
 #									
self.left	=	None
 #									
self.right	=	None
 class	Solution(object):
 def	hasPathSum(self,	root,	sum):
 """
 :type	root:	TreeNode
 :type	sum:	int
 :rtype:	bool
 """
 if	root	==	None:
 return	False
 else:
 current	=	root
 s	=	[]
 s.append(current)
 s.append(current.val)
 while	s	!=	[]:
 pathsum	=	s.pop()
 current	=	s.pop()
 if	not	current.left	and	not	current.right:
 62
Path	Sum
 if	pathsum	==	sum:
 return	True
 if	current.right:
 rightpathsum	=	pathsum	+	current.right.val
 s.append(current.right)
 s.append(rightpathsum)
 if	current.left:
 leftpathsum	=	pathsum	+	current.left.val
 s.append(current.left)
 s.append(leftpathsum)
 return	False
